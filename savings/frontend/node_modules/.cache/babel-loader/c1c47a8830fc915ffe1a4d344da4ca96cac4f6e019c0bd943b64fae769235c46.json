{"ast":null,"code":"/*!\n  * Bootstrap event-handler.js v5.3.0 (https://getbootstrap.com/)\n  * Copyright 2011-2023 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('../util/index.js')) : typeof define === 'function' && define.amd ? define(['../util/index'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.EventHandler = factory(global.Index));\n})(this, function (index_js) {\n  'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap dom/event-handler.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n  const namespaceRegex = /[^.]*(?=\\..*)\\.|.*/;\n  const stripNameRegex = /\\..*/;\n  const stripUidRegex = /::\\d+$/;\n  const eventRegistry = {}; // Events storage\n  let uidEvent = 1;\n  const customEvents = {\n    mouseenter: 'mouseover',\n    mouseleave: 'mouseout'\n  };\n  const nativeEvents = new Set(['click', 'dblclick', 'mouseup', 'mousedown', 'contextmenu', 'mousewheel', 'DOMMouseScroll', 'mouseover', 'mouseout', 'mousemove', 'selectstart', 'selectend', 'keydown', 'keypress', 'keyup', 'orientationchange', 'touchstart', 'touchmove', 'touchend', 'touchcancel', 'pointerdown', 'pointermove', 'pointerup', 'pointerleave', 'pointercancel', 'gesturestart', 'gesturechange', 'gestureend', 'focus', 'blur', 'change', 'reset', 'select', 'submit', 'focusin', 'focusout', 'load', 'unload', 'beforeunload', 'resize', 'move', 'DOMContentLoaded', 'readystatechange', 'error', 'abort', 'scroll']);\n\n  /**\n   * Private methods\n   */\n\n  function makeEventUid(element, uid) {\n    return uid && `${uid}::${uidEvent++}` || element.uidEvent || uidEvent++;\n  }\n  function getElementEvents(element) {\n    const uid = makeEventUid(element);\n    element.uidEvent = uid;\n    eventRegistry[uid] = eventRegistry[uid] || {};\n    return eventRegistry[uid];\n  }\n  function bootstrapHandler(element, fn) {\n    return function handler(event) {\n      hydrateObj(event, {\n        delegateTarget: element\n      });\n      if (handler.oneOff) {\n        EventHandler.off(element, event.type, fn);\n      }\n      return fn.apply(element, [event]);\n    };\n  }\n  function bootstrapDelegationHandler(element, selector, fn) {\n    return function handler(event) {\n      const domElements = element.querySelectorAll(selector);\n      for (let {\n        target\n      } = event; target && target !== this; target = target.parentNode) {\n        for (const domElement of domElements) {\n          if (domElement !== target) {\n            continue;\n          }\n          hydrateObj(event, {\n            delegateTarget: target\n          });\n          if (handler.oneOff) {\n            EventHandler.off(element, event.type, selector, fn);\n          }\n          return fn.apply(target, [event]);\n        }\n      }\n    };\n  }\n  function findHandler(events, callable) {\n    let delegationSelector = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    return Object.values(events).find(event => event.callable === callable && event.delegationSelector === delegationSelector);\n  }\n  function normalizeParameters(originalTypeEvent, handler, delegationFunction) {\n    const isDelegated = typeof handler === 'string';\n    // TODO: tooltip passes `false` instead of selector, so we need to check\n    const callable = isDelegated ? delegationFunction : handler || delegationFunction;\n    let typeEvent = getTypeEvent(originalTypeEvent);\n    if (!nativeEvents.has(typeEvent)) {\n      typeEvent = originalTypeEvent;\n    }\n    return [isDelegated, callable, typeEvent];\n  }\n  function addHandler(element, originalTypeEvent, handler, delegationFunction, oneOff) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return;\n    }\n    let [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction);\n\n    // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position\n    // this prevents the handler from being dispatched the same way as mouseover or mouseout does\n    if (originalTypeEvent in customEvents) {\n      const wrapFunction = fn => {\n        return function (event) {\n          if (!event.relatedTarget || event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget)) {\n            return fn.call(this, event);\n          }\n        };\n      };\n      callable = wrapFunction(callable);\n    }\n    const events = getElementEvents(element);\n    const handlers = events[typeEvent] || (events[typeEvent] = {});\n    const previousFunction = findHandler(handlers, callable, isDelegated ? handler : null);\n    if (previousFunction) {\n      previousFunction.oneOff = previousFunction.oneOff && oneOff;\n      return;\n    }\n    const uid = makeEventUid(callable, originalTypeEvent.replace(namespaceRegex, ''));\n    const fn = isDelegated ? bootstrapDelegationHandler(element, handler, callable) : bootstrapHandler(element, callable);\n    fn.delegationSelector = isDelegated ? handler : null;\n    fn.callable = callable;\n    fn.oneOff = oneOff;\n    fn.uidEvent = uid;\n    handlers[uid] = fn;\n    element.addEventListener(typeEvent, fn, isDelegated);\n  }\n  function removeHandler(element, events, typeEvent, handler, delegationSelector) {\n    const fn = findHandler(events[typeEvent], handler, delegationSelector);\n    if (!fn) {\n      return;\n    }\n    element.removeEventListener(typeEvent, fn, Boolean(delegationSelector));\n    delete events[typeEvent][fn.uidEvent];\n  }\n  function removeNamespacedHandlers(element, events, typeEvent, namespace) {\n    const storeElementEvent = events[typeEvent] || {};\n    for (const [handlerKey, event] of Object.entries(storeElementEvent)) {\n      if (handlerKey.includes(namespace)) {\n        removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);\n      }\n    }\n  }\n  function getTypeEvent(event) {\n    // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n    event = event.replace(stripNameRegex, '');\n    return customEvents[event] || event;\n  }\n  const EventHandler = {\n    on(element, event, handler, delegationFunction) {\n      addHandler(element, event, handler, delegationFunction, false);\n    },\n    one(element, event, handler, delegationFunction) {\n      addHandler(element, event, handler, delegationFunction, true);\n    },\n    off(element, originalTypeEvent, handler, delegationFunction) {\n      if (typeof originalTypeEvent !== 'string' || !element) {\n        return;\n      }\n      const [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction);\n      const inNamespace = typeEvent !== originalTypeEvent;\n      const events = getElementEvents(element);\n      const storeElementEvent = events[typeEvent] || {};\n      const isNamespace = originalTypeEvent.startsWith('.');\n      if (typeof callable !== 'undefined') {\n        // Simplest case: handler is passed, remove that listener ONLY.\n        if (!Object.keys(storeElementEvent).length) {\n          return;\n        }\n        removeHandler(element, events, typeEvent, callable, isDelegated ? handler : null);\n        return;\n      }\n      if (isNamespace) {\n        for (const elementEvent of Object.keys(events)) {\n          removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1));\n        }\n      }\n      for (const [keyHandlers, event] of Object.entries(storeElementEvent)) {\n        const handlerKey = keyHandlers.replace(stripUidRegex, '');\n        if (!inNamespace || originalTypeEvent.includes(handlerKey)) {\n          removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);\n        }\n      }\n    },\n    trigger(element, event, args) {\n      if (typeof event !== 'string' || !element) {\n        return null;\n      }\n      const $ = index_js.getjQuery();\n      const typeEvent = getTypeEvent(event);\n      const inNamespace = event !== typeEvent;\n      let jQueryEvent = null;\n      let bubbles = true;\n      let nativeDispatch = true;\n      let defaultPrevented = false;\n      if (inNamespace && $) {\n        jQueryEvent = $.Event(event, args);\n        $(element).trigger(jQueryEvent);\n        bubbles = !jQueryEvent.isPropagationStopped();\n        nativeDispatch = !jQueryEvent.isImmediatePropagationStopped();\n        defaultPrevented = jQueryEvent.isDefaultPrevented();\n      }\n      const evt = hydrateObj(new Event(event, {\n        bubbles,\n        cancelable: true\n      }), args);\n      if (defaultPrevented) {\n        evt.preventDefault();\n      }\n      if (nativeDispatch) {\n        element.dispatchEvent(evt);\n      }\n      if (evt.defaultPrevented && jQueryEvent) {\n        jQueryEvent.preventDefault();\n      }\n      return evt;\n    }\n  };\n  function hydrateObj(obj) {\n    let meta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    for (const [key, value] of Object.entries(meta)) {\n      try {\n        obj[key] = value;\n      } catch (_unused) {\n        Object.defineProperty(obj, key, {\n          configurable: true,\n          get() {\n            return value;\n          }\n        });\n      }\n    }\n    return obj;\n  }\n  return EventHandler;\n});","map":{"version":3,"names":["namespaceRegex","stripNameRegex","stripUidRegex","eventRegistry","uidEvent","customEvents","mouseenter","mouseleave","nativeEvents","Set","makeEventUid","element","uid","getElementEvents","bootstrapHandler","fn","handler","event","hydrateObj","delegateTarget","oneOff","EventHandler","off","type","apply","bootstrapDelegationHandler","selector","domElements","querySelectorAll","target","parentNode","domElement","findHandler","events","callable","delegationSelector","arguments","length","undefined","Object","values","find","normalizeParameters","originalTypeEvent","delegationFunction","isDelegated","typeEvent","getTypeEvent","has","addHandler","wrapFunction","relatedTarget","contains","call","handlers","previousFunction","replace","addEventListener","removeHandler","removeEventListener","Boolean","removeNamespacedHandlers","namespace","storeElementEvent","handlerKey","entries","includes","on","one","inNamespace","isNamespace","startsWith","keys","elementEvent","slice","keyHandlers","trigger","args","$","index_js","getjQuery","jQueryEvent","bubbles","nativeDispatch","defaultPrevented","Event","isPropagationStopped","isImmediatePropagationStopped","isDefaultPrevented","evt","cancelable","preventDefault","dispatchEvent","obj","meta","key","value","_unused","defineProperty","configurable","get"],"sources":["/Users/benhillier/Documents/GitHub/kids-saving-app-2/savings/frontend/node_modules/bootstrap/js/src/dom/event-handler.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/event-handler.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { getjQuery } from '../util/index.js'\n\n/**\n * Constants\n */\n\nconst namespaceRegex = /[^.]*(?=\\..*)\\.|.*/\nconst stripNameRegex = /\\..*/\nconst stripUidRegex = /::\\d+$/\nconst eventRegistry = {} // Events storage\nlet uidEvent = 1\nconst customEvents = {\n  mouseenter: 'mouseover',\n  mouseleave: 'mouseout'\n}\n\nconst nativeEvents = new Set([\n  'click',\n  'dblclick',\n  'mouseup',\n  'mousedown',\n  'contextmenu',\n  'mousewheel',\n  'DOMMouseScroll',\n  'mouseover',\n  'mouseout',\n  'mousemove',\n  'selectstart',\n  'selectend',\n  'keydown',\n  'keypress',\n  'keyup',\n  'orientationchange',\n  'touchstart',\n  'touchmove',\n  'touchend',\n  'touchcancel',\n  'pointerdown',\n  'pointermove',\n  'pointerup',\n  'pointerleave',\n  'pointercancel',\n  'gesturestart',\n  'gesturechange',\n  'gestureend',\n  'focus',\n  'blur',\n  'change',\n  'reset',\n  'select',\n  'submit',\n  'focusin',\n  'focusout',\n  'load',\n  'unload',\n  'beforeunload',\n  'resize',\n  'move',\n  'DOMContentLoaded',\n  'readystatechange',\n  'error',\n  'abort',\n  'scroll'\n])\n\n/**\n * Private methods\n */\n\nfunction makeEventUid(element, uid) {\n  return (uid && `${uid}::${uidEvent++}`) || element.uidEvent || uidEvent++\n}\n\nfunction getElementEvents(element) {\n  const uid = makeEventUid(element)\n\n  element.uidEvent = uid\n  eventRegistry[uid] = eventRegistry[uid] || {}\n\n  return eventRegistry[uid]\n}\n\nfunction bootstrapHandler(element, fn) {\n  return function handler(event) {\n    hydrateObj(event, { delegateTarget: element })\n\n    if (handler.oneOff) {\n      EventHandler.off(element, event.type, fn)\n    }\n\n    return fn.apply(element, [event])\n  }\n}\n\nfunction bootstrapDelegationHandler(element, selector, fn) {\n  return function handler(event) {\n    const domElements = element.querySelectorAll(selector)\n\n    for (let { target } = event; target && target !== this; target = target.parentNode) {\n      for (const domElement of domElements) {\n        if (domElement !== target) {\n          continue\n        }\n\n        hydrateObj(event, { delegateTarget: target })\n\n        if (handler.oneOff) {\n          EventHandler.off(element, event.type, selector, fn)\n        }\n\n        return fn.apply(target, [event])\n      }\n    }\n  }\n}\n\nfunction findHandler(events, callable, delegationSelector = null) {\n  return Object.values(events)\n    .find(event => event.callable === callable && event.delegationSelector === delegationSelector)\n}\n\nfunction normalizeParameters(originalTypeEvent, handler, delegationFunction) {\n  const isDelegated = typeof handler === 'string'\n  // TODO: tooltip passes `false` instead of selector, so we need to check\n  const callable = isDelegated ? delegationFunction : (handler || delegationFunction)\n  let typeEvent = getTypeEvent(originalTypeEvent)\n\n  if (!nativeEvents.has(typeEvent)) {\n    typeEvent = originalTypeEvent\n  }\n\n  return [isDelegated, callable, typeEvent]\n}\n\nfunction addHandler(element, originalTypeEvent, handler, delegationFunction, oneOff) {\n  if (typeof originalTypeEvent !== 'string' || !element) {\n    return\n  }\n\n  let [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction)\n\n  // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position\n  // this prevents the handler from being dispatched the same way as mouseover or mouseout does\n  if (originalTypeEvent in customEvents) {\n    const wrapFunction = fn => {\n      return function (event) {\n        if (!event.relatedTarget || (event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget))) {\n          return fn.call(this, event)\n        }\n      }\n    }\n\n    callable = wrapFunction(callable)\n  }\n\n  const events = getElementEvents(element)\n  const handlers = events[typeEvent] || (events[typeEvent] = {})\n  const previousFunction = findHandler(handlers, callable, isDelegated ? handler : null)\n\n  if (previousFunction) {\n    previousFunction.oneOff = previousFunction.oneOff && oneOff\n\n    return\n  }\n\n  const uid = makeEventUid(callable, originalTypeEvent.replace(namespaceRegex, ''))\n  const fn = isDelegated ?\n    bootstrapDelegationHandler(element, handler, callable) :\n    bootstrapHandler(element, callable)\n\n  fn.delegationSelector = isDelegated ? handler : null\n  fn.callable = callable\n  fn.oneOff = oneOff\n  fn.uidEvent = uid\n  handlers[uid] = fn\n\n  element.addEventListener(typeEvent, fn, isDelegated)\n}\n\nfunction removeHandler(element, events, typeEvent, handler, delegationSelector) {\n  const fn = findHandler(events[typeEvent], handler, delegationSelector)\n\n  if (!fn) {\n    return\n  }\n\n  element.removeEventListener(typeEvent, fn, Boolean(delegationSelector))\n  delete events[typeEvent][fn.uidEvent]\n}\n\nfunction removeNamespacedHandlers(element, events, typeEvent, namespace) {\n  const storeElementEvent = events[typeEvent] || {}\n\n  for (const [handlerKey, event] of Object.entries(storeElementEvent)) {\n    if (handlerKey.includes(namespace)) {\n      removeHandler(element, events, typeEvent, event.callable, event.delegationSelector)\n    }\n  }\n}\n\nfunction getTypeEvent(event) {\n  // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n  event = event.replace(stripNameRegex, '')\n  return customEvents[event] || event\n}\n\nconst EventHandler = {\n  on(element, event, handler, delegationFunction) {\n    addHandler(element, event, handler, delegationFunction, false)\n  },\n\n  one(element, event, handler, delegationFunction) {\n    addHandler(element, event, handler, delegationFunction, true)\n  },\n\n  off(element, originalTypeEvent, handler, delegationFunction) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return\n    }\n\n    const [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction)\n    const inNamespace = typeEvent !== originalTypeEvent\n    const events = getElementEvents(element)\n    const storeElementEvent = events[typeEvent] || {}\n    const isNamespace = originalTypeEvent.startsWith('.')\n\n    if (typeof callable !== 'undefined') {\n      // Simplest case: handler is passed, remove that listener ONLY.\n      if (!Object.keys(storeElementEvent).length) {\n        return\n      }\n\n      removeHandler(element, events, typeEvent, callable, isDelegated ? handler : null)\n      return\n    }\n\n    if (isNamespace) {\n      for (const elementEvent of Object.keys(events)) {\n        removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1))\n      }\n    }\n\n    for (const [keyHandlers, event] of Object.entries(storeElementEvent)) {\n      const handlerKey = keyHandlers.replace(stripUidRegex, '')\n\n      if (!inNamespace || originalTypeEvent.includes(handlerKey)) {\n        removeHandler(element, events, typeEvent, event.callable, event.delegationSelector)\n      }\n    }\n  },\n\n  trigger(element, event, args) {\n    if (typeof event !== 'string' || !element) {\n      return null\n    }\n\n    const $ = getjQuery()\n    const typeEvent = getTypeEvent(event)\n    const inNamespace = event !== typeEvent\n\n    let jQueryEvent = null\n    let bubbles = true\n    let nativeDispatch = true\n    let defaultPrevented = false\n\n    if (inNamespace && $) {\n      jQueryEvent = $.Event(event, args)\n\n      $(element).trigger(jQueryEvent)\n      bubbles = !jQueryEvent.isPropagationStopped()\n      nativeDispatch = !jQueryEvent.isImmediatePropagationStopped()\n      defaultPrevented = jQueryEvent.isDefaultPrevented()\n    }\n\n    const evt = hydrateObj(new Event(event, { bubbles, cancelable: true }), args)\n\n    if (defaultPrevented) {\n      evt.preventDefault()\n    }\n\n    if (nativeDispatch) {\n      element.dispatchEvent(evt)\n    }\n\n    if (evt.defaultPrevented && jQueryEvent) {\n      jQueryEvent.preventDefault()\n    }\n\n    return evt\n  }\n}\n\nfunction hydrateObj(obj, meta = {}) {\n  for (const [key, value] of Object.entries(meta)) {\n    try {\n      obj[key] = value\n    } catch {\n      Object.defineProperty(obj, key, {\n        configurable: true,\n        get() {\n          return value\n        }\n      })\n    }\n  }\n\n  return obj\n}\n\nexport default EventHandler\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}