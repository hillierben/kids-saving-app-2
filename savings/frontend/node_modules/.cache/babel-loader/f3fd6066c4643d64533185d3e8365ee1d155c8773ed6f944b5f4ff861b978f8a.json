{"ast":null,"code":"var _jsxFileName = \"/Users/benhillier/Documents/GitHub/kids-saving-app-2/savings/frontend/src/components/subComponents/CompleteTask.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Popconfirm } from 'antd';\nimport { useContext } from 'react';\nimport TokenContext from '../../contexts/Token';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSquareCheck } from '@fortawesome/free-solid-svg-icons';\nimport Popup from './Popup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CompleteTask = _ref => {\n  _s();\n  let {\n    task,\n    getTasks\n  } = _ref;\n  const [completeID, setCompleteID] = useState();\n  const {\n    token\n  } = useContext(TokenContext);\n  const [complete, setComplete] = useState();\n  const [isOpen, setIsOpen] = React.useState(false);\n  function handleComplete(e) {\n    let completeTask = async e => {\n      let response = await fetch(`http://127.0.0.1:8000/api/edit-task/${completeID}/`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          \"id\": completeID,\n          \"task\": task.task,\n          \"amount\": task.amount,\n          \"created\": task.created,\n          \"complete\": complete,\n          \"user\": task.user\n        })\n      });\n      setComplete(prev => !prev);\n    };\n    completeTask(e);\n  }\n  useEffect(() => {\n    getTasks();\n  }, [complete]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Popup, {\n      isOpen: isOpen,\n      close: () => setIsOpen(false),\n      handle: handleComplete,\n      children: \"Are you sure you want to complete this task?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faSquareCheck,\n      className: \"fa-2x icon-margin\",\n      size: \"md\",\n      style: {\n        color: \"#333333\"\n      },\n      onClick: () => {\n        setCompleteID(task.id);\n        setComplete(!task.complete);\n        setIsOpen(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(CompleteTask, \"1p1O3qSFBqH3/CdxJU/5cZkVzaw=\");\n_c = CompleteTask;\nexport default CompleteTask;\nvar _c;\n$RefreshReg$(_c, \"CompleteTask\");","map":{"version":3,"names":["React","useEffect","useState","Popconfirm","useContext","TokenContext","FontAwesomeIcon","faSquareCheck","Popup","jsxDEV","_jsxDEV","Fragment","_Fragment","CompleteTask","_ref","_s","task","getTasks","completeID","setCompleteID","token","complete","setComplete","isOpen","setIsOpen","handleComplete","e","completeTask","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","amount","created","user","prev","children","close","handle","fileName","_jsxFileName","lineNumber","columnNumber","icon","className","size","style","color","onClick","id","_c","$RefreshReg$"],"sources":["/Users/benhillier/Documents/GitHub/kids-saving-app-2/savings/frontend/src/components/subComponents/CompleteTask.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport { Popconfirm } from 'antd'\nimport { useContext } from 'react'\nimport TokenContext from '../../contexts/Token'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSquareCheck } from '@fortawesome/free-solid-svg-icons'\nimport Popup from './Popup'\n\n\n\n\nconst CompleteTask = ({task, getTasks}) => {\n    const[completeID, setCompleteID] = useState()\n    const{token} = useContext(TokenContext)\n    const[complete, setComplete] = useState()\n    const[isOpen, setIsOpen] = React.useState(false)\n\n    function handleComplete(e) {\n        let completeTask = async (e)=>{\n            let response = await fetch(`http://127.0.0.1:8000/api/edit-task/${completeID}/`, {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\"),\n                },\n                body: JSON.stringify({\n                    \"id\": completeID,\n                    \"task\": task.task,\n                    \"amount\": task.amount,\n                    \"created\": task.created,\n                    \"complete\": complete,\n                    \"user\": task.user,\n                })\n            })\n            setComplete(prev=>(!prev))\n        }\n        completeTask(e)\n    }\n    \n    useEffect(()=>{\n        getTasks()\n    },[complete])\n\n    return (\n        <>\n            <Popup isOpen={isOpen} close={() => setIsOpen(false)} handle={handleComplete}>\n                Are you sure you want to complete this task?\n            </Popup>\n            <FontAwesomeIcon \n                icon={faSquareCheck} \n                className='fa-2x icon-margin' \n                size=\"md\"\n                style={{color: \"#333333\",}} \n                onClick={()=>{setCompleteID(task.id); \n                    setComplete(!task.complete); \n                    setIsOpen(true)}} />\n        </>\n    )\n}\n\nexport default CompleteTask\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}