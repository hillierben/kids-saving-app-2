{"ast":null,"code":"var _jsxFileName = \"/Users/benhillier/Documents/GitHub/kids-saving-app/kidsavings/frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport csrftoken from './CSRFToken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  const [formData, setFormData] = React.useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  // Update registerData whenever form data changes\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value\n    }));\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    fetch('http://127.0.0.1:8000/api/login/', {\n      method: 'POST',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n        'X-CSRFToken': csrftoken\n      },\n      body: JSON.stringify({\n        email: formData.email,\n        password: formData.password\n      })\n    }).then(response => response.json()).then(data => props.setPageSelector(data));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.loggedOut\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Parent Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Email\",\n          className: \"rf-input rf-parent-name\",\n          type: \"text\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Password\",\n          className: \"rf-input rf-parent-name\",\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"rf-submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Mrrsgw6+pclvKwSRsmw4wfXP8SU=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","csrftoken","jsxDEV","_jsxDEV","Login","props","_s","formData","setFormData","useState","email","password","handleChange","event","name","value","target","prevFormData","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","setPageSelector","className","children","onSubmit","loggedOut","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","id","onChange","required","_c","$RefreshReg$"],"sources":["/Users/benhillier/Documents/GitHub/kids-saving-app/kidsavings/frontend/src/components/Login.js"],"sourcesContent":["import React from 'react'\nimport csrftoken from './CSRFToken';\n\nconst Login = (props) => {\n  const[formData, setFormData] = React.useState({\n    email: \"\",\n    password: \"\",    \n  })\n\n  // Update registerData whenever form data changes\n  function handleChange(event) {\n    const {name, value} = event.target;\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [name]: value,\n    }))\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    fetch('http://127.0.0.1:8000/api/login/', {\n      method: 'POST',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n        'X-CSRFToken': csrftoken,\n      },\n      body: JSON.stringify({\n        email: formData.email,\n        password: formData.password\n      })\n    })\n    .then(response => response.json())\n    .then(data => props.setPageSelector(data))\n  }\n\n  return (\n    <div className=\"main-page\">\n    <form className=\"login-form\" onSubmit={handleSubmit}> \n      <div className=\"login-div\">\n          <p>{props.loggedOut}</p>\n          <h2>Parent Login</h2>\n          <input \n            placeholder=\"Email\"\n            className=\"rf-input rf-parent-name\"\n            type=\"text\"\n            id=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            required/>\n          <input \n            placeholder=\"Password\"\n            className=\"rf-input rf-parent-name\"\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            required/>\n          <button className='rf-submit'>Login</button>\n      </div>\n    </form>\n    </div>\n  )\n}\n\nexport default Login\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}