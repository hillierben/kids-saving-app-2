{"ast":null,"code":"var _jsxFileName = \"/Users/benhillier/Documents/GitHub/kids-saving-app-2/savings/frontend/src/components/CompleteTask.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CompleteTask = props => {\n  function handleComplete(e) {\n    alert(completeID);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Popconfirm, {\n      title: \"Are you sure you want to complete this task?\",\n      onConfirm: handleComplete,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"delete\",\n        value: task.id,\n        onClick: () => setCompleteID(task.id),\n        children: \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = CompleteTask;\nexport default CompleteTask;\nvar _c;\n$RefreshReg$(_c, \"CompleteTask\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","CompleteTask","props","handleComplete","e","alert","completeID","children","Popconfirm","title","onConfirm","type","name","value","task","id","onClick","setCompleteID","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/benhillier/Documents/GitHub/kids-saving-app-2/savings/frontend/src/components/CompleteTask.js"],"sourcesContent":["import React from 'react'\n\nconst CompleteTask = (props) => {\n\n    function handleComplete(e) {\n        alert(completeID)\n    }\n\n    return (\n        <>\n            <Popconfirm title=\"Are you sure you want to complete this task?\" onConfirm={handleComplete}>\n                <button type=\"submit\" name=\"delete\" value={task.id} onClick={()=>setCompleteID(task.id)}>Complete</button>\n            </Popconfirm>\n        </>\n    )\n}\n\nexport default CompleteTask\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAE5B,SAASC,cAAcA,CAACC,CAAC,EAAE;IACvBC,KAAK,CAACC,UAAU,CAAC;EACrB;EAEA,oBACIR,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACIT,OAAA,CAACU,UAAU;MAACC,KAAK,EAAC,8CAA8C;MAACC,SAAS,EAAEP,cAAe;MAAAI,QAAA,eACvFT,OAAA;QAAQa,IAAI,EAAC,QAAQ;QAACC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAEC,IAAI,CAACC,EAAG;QAACC,OAAO,EAAEA,CAAA,KAAIC,aAAa,CAACH,IAAI,CAACC,EAAE,CAAE;QAAAR,QAAA,EAAC;MAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClG;EAAC,gBACf,CAAC;AAEX,CAAC;AAAAC,EAAA,GAbKrB,YAAY;AAelB,eAAeA,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}