{"ast":null,"code":"var _jsxFileName = \"/Users/benhillier/Documents/GitHub/kids-saving-app-2/savings/frontend/src/components/subComponents/CompleteTask.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Popconfirm } from 'antd';\nimport { useContext } from 'react';\nimport TokenContext from '../../contexts/Token';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSquareCheck } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CompleteTask = _ref => {\n  _s();\n  let {\n    task,\n    getTasks\n  } = _ref;\n  const [completeID, setCompleteID] = useState();\n  const {\n    token\n  } = useContext(TokenContext);\n  const [complete, setComplete] = useState(false);\n  function handleComplete(e) {\n    console.log(task.complete);\n    let complete = task.complete ? false : true;\n    console.log(complete);\n    let completeTask = async e => {\n      let response = await fetch(`http://127.0.0.1:8000/api/edit-task/${completeID}/`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          \"id\": completeID,\n          \"task\": task.task,\n          \"amount\": task.amount,\n          \"created\": task.created,\n          \"complete\": complete,\n          \"user\": task.user\n        })\n      });\n      let data = await response.json();\n    };\n    completeTask(e);\n    setComplete(prevComplete => {\n      return !prevComplete;\n    });\n  }\n  useEffect(() => {\n    getTasks();\n  }, [complete]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Popconfirm, {\n      title: \"Are you sure you want to complete this task?\",\n      onConfirm: handleComplete,\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faSquareCheck,\n        className: \"fa-2x\",\n        style: {\n          color: \"#555555\"\n        },\n        onClick: () => setCompleteID(task.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(CompleteTask, \"9Za3h98GnyKDDQ9RP4pWTaq69PY=\");\n_c = CompleteTask;\nexport default CompleteTask;\nvar _c;\n$RefreshReg$(_c, \"CompleteTask\");","map":{"version":3,"names":["React","useEffect","useState","Popconfirm","useContext","TokenContext","FontAwesomeIcon","faSquareCheck","jsxDEV","_jsxDEV","Fragment","_Fragment","CompleteTask","_ref","_s","task","getTasks","completeID","setCompleteID","token","complete","setComplete","handleComplete","e","console","log","completeTask","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","amount","created","user","data","json","prevComplete","children","title","onConfirm","icon","className","style","color","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/benhillier/Documents/GitHub/kids-saving-app-2/savings/frontend/src/components/subComponents/CompleteTask.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport { Popconfirm } from 'antd'\nimport { useContext } from 'react'\nimport TokenContext from '../../contexts/Token'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSquareCheck } from '@fortawesome/free-solid-svg-icons'\n\n\n\n\nconst CompleteTask = ({task, getTasks}) => {\n    const[completeID, setCompleteID] = useState()\n    const{token} = useContext(TokenContext)\n    const[complete, setComplete] = useState(false)\n\n    function handleComplete(e) {\n        console.log(task.complete)\n        let complete = task.complete ? false : true\n        console.log(complete)\n        let completeTask = async (e)=>{\n            let response = await fetch(`http://127.0.0.1:8000/api/edit-task/${completeID}/`, {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\"),\n                },\n                body: JSON.stringify({\n                    \"id\": completeID,\n                    \"task\": task.task,\n                    \"amount\": task.amount,\n                    \"created\": task.created,\n                    \"complete\": complete,\n                    \"user\": task.user,\n                })\n            })\n            let data = await response.json()\n        }\n        completeTask(e)\n        setComplete(prevComplete=>{\n            return !prevComplete\n        })\n    }\n    \n    useEffect(()=>{\n        getTasks()\n    },[complete])\n\n    return (\n        <>\n            <Popconfirm title=\"Are you sure you want to complete this task?\" onConfirm={handleComplete}>\n                <FontAwesomeIcon icon={faSquareCheck} className='fa-2x' style={{color: \"#555555\",}} onClick={()=>setCompleteID(task.id)} />\n                {/* <button\n                    type=\"submit\"\n                    name=\"delete\"\n                    value={task.id}\n                    onClick={()=>setCompleteID(task.id)}\n                    className='btn btn-success btn-sm btn-margin'\n                    >Complete\n                </button> */}\n            </Popconfirm>\n        </>\n    )\n}\n\nexport default CompleteTask\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,MAAM;AACjC,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,aAAa,QAAQ,mCAAmC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAKjE,MAAMC,YAAY,GAAGC,IAAA,IAAsB;EAAAC,EAAA;EAAA,IAArB;IAACC,IAAI;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EAClC,MAAK,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,CAAC;EAC7C,MAAK;IAACiB;EAAK,CAAC,GAAGf,UAAU,CAACC,YAAY,CAAC;EACvC,MAAK,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAE9C,SAASoB,cAAcA,CAACC,CAAC,EAAE;IACvBC,OAAO,CAACC,GAAG,CAACV,IAAI,CAACK,QAAQ,CAAC;IAC1B,IAAIA,QAAQ,GAAGL,IAAI,CAACK,QAAQ,GAAG,KAAK,GAAG,IAAI;IAC3CI,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;IACrB,IAAIM,YAAY,GAAG,MAAOH,CAAC,IAAG;MAC1B,IAAII,QAAQ,GAAG,MAAMC,KAAK,CAAE,uCAAsCX,UAAW,GAAE,EAAE;QAC7EY,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;QAC7D,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjB,IAAI,EAAElB,UAAU;UAChB,MAAM,EAAEF,IAAI,CAACA,IAAI;UACjB,QAAQ,EAAEA,IAAI,CAACqB,MAAM;UACrB,SAAS,EAAErB,IAAI,CAACsB,OAAO;UACvB,UAAU,EAAEjB,QAAQ;UACpB,MAAM,EAAEL,IAAI,CAACuB;QACjB,CAAC;MACL,CAAC,CAAC;MACF,IAAIC,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;IACpC,CAAC;IACDd,YAAY,CAACH,CAAC,CAAC;IACfF,WAAW,CAACoB,YAAY,IAAE;MACtB,OAAO,CAACA,YAAY;IACxB,CAAC,CAAC;EACN;EAEAxC,SAAS,CAAC,MAAI;IACVe,QAAQ,CAAC,CAAC;EACd,CAAC,EAAC,CAACI,QAAQ,CAAC,CAAC;EAEb,oBACIX,OAAA,CAAAE,SAAA;IAAA+B,QAAA,eACIjC,OAAA,CAACN,UAAU;MAACwC,KAAK,EAAC,8CAA8C;MAACC,SAAS,EAAEtB,cAAe;MAAAoB,QAAA,eACvFjC,OAAA,CAACH,eAAe;QAACuC,IAAI,EAAEtC,aAAc;QAACuC,SAAS,EAAC,OAAO;QAACC,KAAK,EAAE;UAACC,KAAK,EAAE;QAAU,CAAE;QAACC,OAAO,EAAEA,CAAA,KAAI/B,aAAa,CAACH,IAAI,CAACmC,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASnH;EAAC,gBACf,CAAC;AAEX,CAAC;AAAAxC,EAAA,CApDKF,YAAY;AAAA2C,EAAA,GAAZ3C,YAAY;AAsDlB,eAAeA,YAAY;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}